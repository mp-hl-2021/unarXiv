syntax = "proto3";

package api;

option go_package = "github.com/mp-hl-2021/unarXiv;api";

service unarXiv {
  rpc Register(AuthenticationRequest) returns (AuthenticationData);
  rpc Login(AuthenticationRequest) returns (AuthenticationData);

  rpc Search(SearchQueryRequest) returns (SearchQueryResponse);

  rpc SetArticleSubscriptionStatus(SetArticleSubscriptionStatusRequest) returns (ArticleSubscriptionStatus);
  rpc GetArticleSubscriptionStatus(GetArticleSubscriptionStatusRequest) returns (ArticleSubscriptionStatus);
  rpc SetSearchQuerySubscriptionStatus(SetSearchQuerySubscriptionStatusRequest) returns (SearchQuerySubscriptionStatus);
  rpc GetSearchQuerySubscriptionStatus(GetSearchQuerySubscriptionStatusRequest) returns (SearchQuerySubscriptionStatus);

  rpc GetArticlesUpdates(AuthenticationData) returns (GetArticlesUpdatesResponse);
  rpc AccessArticle(AccessArticleRequest) returns (AccessArticleResponse);

  rpc GetSearchQueriesUpdates(AuthenticationData) returns (GetSearchQueriesUpdatesResponse);
  // rpc AccessSearchQuery(SearchQueryRequest) -> just Search()

  rpc GetSearchHistory(AuthenticationData) returns (GetSearchHistoryResponse);
  rpc GetArticlesHistory(AuthenticationData) returns (GetArticlesHistoryResponse);
}

message AuthenticationRequest {
  string login = 1;
  string password = 2;
}

message AuthenticationData {
  string jwt = 1;
}

message ArticleMetaInfo {
  string title = 1;
  string authors = 2;
  string absId = 3;
  string abstract = 4;

  uint64 lastUpdateTimestamp = 15;

  // these fields are present if user is authenticated
  optional bool subscribed = 20;
  optional uint64 lastAccessedTimestamp = 21;
}


message SearchQueryRequest {
  string query = 1;
  optional uint32 offset = 2;

  // these fields are present if user is authenticated
  optional AuthenticationData authData = 20;
}

message SearchQueryResponse {
  uint32 totalMatchesCount = 2;
  repeated SearchQueryResponseItem matches = 3;
  // these fields are present if user is authenticated
  optional uint64 lastAccessedTimestamp = 21; // this field is present if user is subscribed for the search query
}

message SearchQueryResponseItem {
  ArticleMetaInfo article = 1;
}

message SetArticleSubscriptionStatusRequest {
  AuthenticationData authData = 1;
  string absId = 2;
  bool subscribe = 3;
}

message GetArticleSubscriptionStatusRequest {
  AuthenticationData authData = 1;
  string absId = 2;
}

message ArticleSubscriptionStatus {
  string absId = 1;
  bool isSubscribedNow = 2;
}

message SetSearchQuerySubscriptionStatusRequest {
  AuthenticationData authData = 1;
  string query = 2;
  bool subscribe = 3;
}

message GetSearchQuerySubscriptionStatusRequest {
  AuthenticationData authData = 1;
  string query = 2;
}

message SearchQuerySubscriptionStatus {
  string query = 1;
  bool isSubscribedNow = 2;
}

message GetArticlesUpdatesResponse {
  repeated ArticleMetaInfo articles = 1;
}

message AccessArticleRequest {
  AuthenticationData authData = 1;
  string absId = 2;
}

message AccessArticleResponse {
  ArticleMetaInfo article = 1;
}

message GetSearchQueriesUpdatesResponse {
  repeated GetSearchQueriesUpdatesResponseItem updates = 1;
}

message GetSearchQueriesUpdatesResponseItem {
  string query = 1;
  optional uint64 lastNewArticleTimestamp = 2; // presents if there's at least 1 article that matches the query
  uint64 lastAccessedTimestamp = 3;
  optional uint32 newArticlesCount = 4;
}

message GetSearchHistoryResponse {
  repeated GetSearchHistoryResponseItem items = 1;
}

message GetSearchHistoryResponseItem {
  string query = 1;
  bool subscribed = 2;
  uint64 accessedTimestamp = 3;
}

message GetArticlesHistoryResponse {
  repeated ArticleMetaInfo articles = 1;
}